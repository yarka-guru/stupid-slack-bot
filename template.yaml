AWSTemplateFormatVersion : '2010-09-09'
Transform : AWS::Serverless-2016-10-31
Description : >
  Serverless Slack App with OpenAI and Stability AI Integration

Globals :
  Function :
    Timeout : 60
    MemorySize : 128
    Tracing : Active
    Runtime : python3.12

Parameters :
  SlackBotTokenSecretName :
    Type : String
    Description : Name of the Secrets Manager secret containing the Slack Bot API Token
  OpenAIApiKeySecretName :
    Type : String
    Description : Name of the Secrets Manager secret containing the OpenAI API Key
  StabilityApiKeySecretName :
    Type : String
    Description : Name of the Secrets Manager secret containing the Stability API Key

Resources :
  MyLambdaExecutionRole :
    Type : AWS::IAM::Role
    Properties :
      AssumeRolePolicyDocument :
        Version : '2012-10-17'
        Statement :
          - Effect : "Allow"
            Principal :
              Service : [ lambda.amazonaws.com ]
            Action : [ "sts:AssumeRole" ]
      Policies :
        - PolicyName : "LambdaFunctionPolicy"
          PolicyDocument :
            Version : '2012-10-17'
            Statement :
              - Effect : "Allow"
                Action :
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource : "arn:aws:logs:*:*:*"
              - Effect : "Allow"
                Action :
                  - "secretsmanager:GetSecretValue"
                Resource :
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
              - Effect : "Allow"
                Action :
                  - "dynamodb:PutItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:UpdateItem"
                Resource :
                  - !GetAtt DynamoDBTable.Arn

  DynamoDBTable :
    Type : AWS::DynamoDB::Table
    Properties :
      TableName : !Sub "${AWS::StackName}-ThreadTimestamps"
      AttributeDefinitions :
        - AttributeName : thread_ts
          AttributeType : S
      KeySchema :
        - AttributeName : thread_ts
          KeyType : HASH
      ProvisionedThroughput :
        ReadCapacityUnits : 5
        WriteCapacityUnits : 5

  SlackOpenAIResponseFunction :
    Type : AWS::Serverless::Function
    Properties :
      CodeUri : slack_openai_response/
      Handler : app.lambda_handler
      Role : !GetAtt MyLambdaExecutionRole.Arn
      Architectures :
        - arm64
      FunctionUrlConfig :
        AuthType : NONE
        InvokeMode : BUFFERED
        Cors :
          AllowCredentials : false
          AllowMethods :
            - POST
          AllowOrigins :
            - "*"
      Environment :
        Variables :
          SLACK_BOT_TOKEN_SECRET_NAME : !Ref SlackBotTokenSecretName
          OPENAI_API_KEY_SECRET_NAME : !Ref OpenAIApiKeySecretName
          STABILITY_API_KEY_SECRET_NAME : !Ref StabilityApiKeySecretName
          DYNAMODB_TABLE_NAME : !Ref DynamoDBTable

Outputs :
  SlackOpenAIResponseFunctionArn :
    Description : "ARN of Slack OpenAI Response Lambda Function"
    Value : !GetAtt SlackOpenAIResponseFunction.Arn
  SlackOpenAIResponseFunctionIamRole :
    Description : "Implicit IAM Role created for Slack OpenAI Response function"
    Value : !GetAtt MyLambdaExecutionRole.Arn
  DynamoDBTableName :
    Description : "Name of the DynamoDB Table used for storing thread timestamps"
    Value : !Ref DynamoDBTable
